From d580998fdb93831cb65d1b1ce24cd691c703962b Mon Sep 17 00:00:00 2001
From: Marek Kasik <mkasik@redhat.com>
Date: Mon, 14 Nov 2022 11:18:10 +0100
Subject: [PATCH] frdp-session: Keep display ratio when scaling

Compute "scale" value so that the image fits in the window
and keeps ratio of the remote display.
---
 src/frdp-session.c | 45 ++++++++++++++++++++++++---------------------
 1 file changed, 24 insertions(+), 21 deletions(-)

diff --git a/src/frdp-session.c b/src/frdp-session.c
index 1b9002a..ee7524a 100644
--- a/src/frdp-session.c
+++ b/src/frdp-session.c
@@ -50,8 +50,7 @@ struct _FrdpSessionPrivate
   cairo_surface_t *surface;
   cairo_format_t cairo_format;
   gboolean scaling;
-  double scale_x;
-  double scale_y;
+  double scale;
   double offset_x;
   double offset_y;
 
@@ -126,22 +125,22 @@ frdp_session_update_mouse_pointer (FrdpSession  *self)
     cursor = gdk_cursor_new_from_name (display, "default");
   else {
     rdpPointer *pointer = &priv->cursor->pointer;
-    double x = priv->cursor->pointer.xPos * priv->scale_x;
-    double y = priv->cursor->pointer.yPos * priv->scale_y;
-    double w = pointer->width * priv->scale_x;
-    double h = pointer->height * priv->scale_y;
+    double x = priv->cursor->pointer.xPos * priv->scale;
+    double y = priv->cursor->pointer.yPos * priv->scale;
+    double w = pointer->width * priv->scale;
+    double h = pointer->height * priv->scale;
     cairo_surface_t *surface;
     cairo_t *cairo;
 
     if (!self->priv->scaling) {
-      self->priv->scale_x = self->priv->scale_y = 1.0;
+      self->priv->scale = 1.0;
     }
 
     /* Scale the source image according to current settings. */
     surface = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, w, h);
     cairo = cairo_create (surface);
 
-    cairo_scale(cairo, self->priv->scale_x, self->priv->scale_y);
+    cairo_scale(cairo, self->priv->scale, self->priv->scale);
     cairo_set_source_surface (cairo, priv->cursor->data, 0, 0);
     cairo_paint (cairo);
 
@@ -220,7 +219,7 @@ frdp_session_configure_event (GtkWidget *widget,
   GtkScrolledWindow *scrolled;
   rdpSettings *settings;
   rdpGdi *gdi;
-  double width, height;
+  double width, height, widget_ratio, server_ratio;
 
   if (priv->freerdp_session == NULL)
     return;
@@ -236,16 +235,20 @@ frdp_session_configure_event (GtkWidget *widget,
 
   if (priv->freerdp_session->settings == NULL)
     return;
+
   settings = priv->freerdp_session->settings;
 
   if (priv->scaling) {
-    priv->scale_x = width / settings->DesktopWidth;
-    priv->scale_y = height / settings->DesktopHeight;
+    widget_ratio = height > 0 ? width / height : 1.0;
+    server_ratio = settings->DesktopHeight > 0 ? (double) settings->DesktopWidth / settings->DesktopHeight : 1.0;
 
-    priv->offset_x = (width - settings->DesktopWidth * priv->scale_x) / 2.0;
-    priv->offset_y = (height - settings->DesktopHeight * priv->scale_y) / 2.0;
+    if (widget_ratio > server_ratio)
+      self->priv->scale = height / settings->DesktopHeight;
+    else
+      self->priv->scale = width / settings->DesktopWidth;
 
-    gtk_widget_set_size_request (priv->display, settings->DesktopWidth, settings->DesktopHeight);
+    self->priv->offset_x = (width - settings->DesktopWidth * self->priv->scale) / 2.0;
+    self->priv->offset_y = (height - settings->DesktopHeight * self->priv->scale) / 2.0;
   } else {
     gtk_widget_set_size_request (priv->display, gdi->width, gdi->height);
   }
@@ -273,7 +276,7 @@ frdp_session_draw (GtkWidget *widget,
 
   if (self->priv->scaling) {
       cairo_translate (cr, self->priv->offset_x, self->priv->offset_y);
-      cairo_scale (cr, self->priv->scale_x, self->priv->scale_y);
+      cairo_scale (cr, self->priv->scale, self->priv->scale);
   }
 
   cairo_set_source_surface (cr, self->priv->surface, 0, 0);
@@ -398,13 +401,13 @@ frdp_end_paint (rdpContext *context)
   priv = self->priv;
 
   if (priv->scaling) {
-      pos_x = self->priv->offset_x + x * priv->scale_x;
-      pos_y = self->priv->offset_y + y * priv->scale_y;
+      pos_x = self->priv->offset_x + x * priv->scale;
+      pos_y = self->priv->offset_y + y * priv->scale;
       gtk_widget_queue_draw_area (priv->display,
                                   floor (pos_x),
                                   floor (pos_y),
-                                  ceil (pos_x + w * priv->scale_x) - floor (pos_x),
-                                  ceil (pos_y + h * priv->scale_y) - floor (pos_y));
+                                  ceil (pos_x + w * priv->scale) - floor (pos_x),
+                                  ceil (pos_y + h * priv->scale) - floor (pos_y));
   } else {
     gtk_widget_queue_draw_area (priv->display, x, y, w, h);
   }
@@ -939,8 +942,8 @@ frdp_session_mouse_event (FrdpSession          *self,
   input = priv->freerdp_session->input;
 
   if (priv->scaling) {
-    x = (x - priv->offset_x) / priv->scale_x;
-    y = (y - priv->offset_y) / priv->scale_y;
+    x = (x - priv->offset_x) / priv->scale;
+    y = (y - priv->offset_y) / priv->scale;
   }
 
   x = x < 0.0 ? 0.0 : x;
-- 
2.47.1

