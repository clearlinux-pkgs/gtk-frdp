From 403214fbdc8c4379393b49f0026771e6514d9c2f Mon Sep 17 00:00:00 2001
From: Marek Kasik <mkasik@redhat.com>
Date: Fri, 12 Jan 2024 19:56:21 +0100
Subject: [PATCH] authentication: Handle authentication asynchronically

Once FreeRDP calls for credentials in the sync callback
emit signal that authentication is needed and wait
until frdp_display_authenticate_finish() is called.
Then pass the authentication credentials back to FreeRDP.

Also add support for domains.
---
 src/frdp-display.c | 89 ++++++++++++++++++++++++++++++++++++++++------
 src/frdp-display.h | 13 ++++---
 src/frdp-session.c | 20 ++++++++++-
 3 files changed, 106 insertions(+), 16 deletions(-)

diff --git a/src/frdp-display.c b/src/frdp-display.c
index 5971e6d..99d2316 100644
--- a/src/frdp-display.c
+++ b/src/frdp-display.c
@@ -31,6 +31,7 @@ struct _FrdpDisplayPrivate
 
   gboolean     awaiting_certificate_verification;
   gboolean     awaiting_certificate_change_verification;
+  gboolean     awaiting_authentication;
 
   guint        certificate_verification_value;
   guint        certificate_change_verification_value;
@@ -45,7 +46,8 @@ enum
   PROP_PASSWORD,
   PROP_SCALING,
   PROP_ALLOW_RESIZE,
-  PROP_RESIZE_SUPPORTED
+  PROP_RESIZE_SUPPORTED,
+  PROP_DOMAIN
 };
 
 enum
@@ -301,6 +303,10 @@ frdp_display_get_property (GObject      *object,
         g_object_get (session, "password", &str_property, NULL);
         g_value_set_string (value, str_property);
         break;
+      case PROP_DOMAIN:
+        g_object_get (session, "domain", &str_property, NULL);
+        g_value_set_string (value, str_property);
+        break;
       case PROP_SCALING:
         g_object_get (session, "scaling", &str_property, NULL);
         g_value_set_boolean (value, (gboolean)GPOINTER_TO_INT (str_property));
@@ -335,6 +341,9 @@ frdp_display_set_property (GObject      *object,
       case PROP_PASSWORD:
         g_object_set (session, "password", g_value_get_string (value), NULL);
         break;
+      case PROP_DOMAIN:
+        g_object_set (session, "domain", g_value_get_string (value), NULL);
+        break;
       case PROP_SCALING:
         frdp_display_set_scaling (self, g_value_get_boolean (value));
         break;
@@ -385,6 +394,14 @@ frdp_display_class_init (FrdpDisplayClass *klass)
                                                         NULL,
                                                         G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE));
 
+  g_object_class_install_property (gobject_class,
+                                   PROP_DOMAIN,
+                                   g_param_spec_string ("domain",
+                                                        "domain",
+                                                        "domain",
+                                                        NULL,
+                                                        G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE));
+
   g_object_class_install_property (gobject_class,
                                    PROP_SCALING,
                                    g_param_spec_boolean ("scaling",
@@ -626,16 +643,66 @@ GtkWidget *frdp_display_new (void)
 }
 
 gboolean
-frdp_display_authenticate (FrdpDisplay *self,
-                           gchar **username,
-                           gchar **password,
-                           gchar **domain)
+frdp_display_authenticate (FrdpDisplay  *self,
+                           gchar       **username,
+                           gchar       **password,
+                           gchar       **domain)
 {
-  FrdpDisplayClass *klass = FRDP_DISPLAY_GET_CLASS (self);
+  FrdpDisplayPrivate *priv = frdp_display_get_instance_private (self);
+  GMainContext       *context;
 
   g_signal_emit (self, signals[RDP_NEEDS_AUTHENTICATION], 0);
 
-  return klass->authenticate (self, username, password, domain);
+  priv->awaiting_authentication = TRUE;
+
+  context = g_main_context_default ();
+
+  while (priv->awaiting_authentication)
+    g_main_context_iteration (context, FALSE);
+
+  *username = *password = *domain = NULL;
+  g_object_get (priv->session,
+                "username", username,
+                "password", password,
+                "domain", domain,
+                NULL);
+
+  if (*username != NULL && *username[0] == '\0' &&
+      *password != NULL && *password[0] == '\0' &&
+      *domain != NULL && *domain[0] == '\0')
+    return FALSE;
+
+  return TRUE;
+}
+
+/*
+ * frdp_display_authenticate_finish:
+ * @display: (transfer none): the RDP display widget
+ * @username: (transfer none): username for the connection
+ * @password: (transfer none): password for the connection
+ * @domain: (transfer none): optional domain for the connection
+ *
+ * This function finishes authentication which started in
+ * frdp_display_authenticate() and stores given authentication
+ * credentials into FrdpSession so that frdp_display_authenticate()
+ * can pick them up later and pass them to FreeRDP.
+ *
+ */
+void
+frdp_display_authenticate_finish (FrdpDisplay *self,
+                                  gchar       *username,
+                                  gchar       *password,
+                                  gchar       *domain)
+{
+  FrdpDisplayPrivate *priv = frdp_display_get_instance_private (self);
+
+  g_object_set (priv->session,
+                "username", username,
+                "password", password,
+                "domain", domain,
+                NULL);
+
+  priv->awaiting_authentication = FALSE;
 }
 
 guint
@@ -720,8 +787,8 @@ frdp_display_certificate_change_verify_ex (FrdpDisplay *display,
  * Finishes verification requested by FreeRDP.
  */
 void
-frdp_display_certificate_verify (FrdpDisplay *display,
-                                 guint        verification)
+frdp_display_certificate_verify_ex_finish (FrdpDisplay *display,
+                                           guint        verification)
 {
   FrdpDisplayPrivate *priv = frdp_display_get_instance_private (display);
 
@@ -745,8 +812,8 @@ frdp_display_certificate_verify (FrdpDisplay *display,
  * Finishes verification requested by FreeRDP.
  */
 void
-frdp_display_certificate_change_verify (FrdpDisplay *display,
-                                        guint        verification)
+frdp_display_certificate_change_verify_ex_finish (FrdpDisplay *display,
+                                                  guint        verification)
 {
   FrdpDisplayPrivate *priv = frdp_display_get_instance_private (display);
 
diff --git a/src/frdp-display.h b/src/frdp-display.h
index 06dc4bc..33d1381 100644
--- a/src/frdp-display.h
+++ b/src/frdp-display.h
@@ -74,11 +74,16 @@ guint      frdp_display_certificate_change_verify_ex (FrdpDisplay *self,
                                                       const gchar *old_fingerprint,
                                                       guint32      flags);
 
-void       frdp_display_certificate_verify (FrdpDisplay *self,
-                                            guint        verification);
+void       frdp_display_certificate_verify_ex_finish (FrdpDisplay *self,
+                                                      guint        verification);
 
-void       frdp_display_certificate_change_verify (FrdpDisplay *self,
-                                                   guint        verification);
+void       frdp_display_certificate_change_verify_ex_finish (FrdpDisplay *self,
+                                                             guint        verification);
+
+void       frdp_display_authenticate_finish (FrdpDisplay *self,
+                                             gchar       *username,
+                                             gchar       *password,
+                                             gchar       *domain);
 
 GdkPixbuf *frdp_display_get_pixbuf (FrdpDisplay *display);
 
diff --git a/src/frdp-session.c b/src/frdp-session.c
index a975048..2f930cc 100644
--- a/src/frdp-session.c
+++ b/src/frdp-session.c
@@ -77,6 +77,7 @@ struct _FrdpSessionPrivate
   gchar *hostname;
   gchar *username;
   gchar *password;
+  gchar *domain;
   guint  port;
 
   gboolean show_cursor;
@@ -100,7 +101,8 @@ enum
   PROP_PASSWORD,
   PROP_DISPLAY,
   PROP_SCALING,
-  PROP_MONITOR_LAYOUT_SUPPORTED
+  PROP_MONITOR_LAYOUT_SUPPORTED,
+  PROP_DOMAIN
 };
 
 enum
@@ -748,6 +750,7 @@ frdp_session_init_freerdp (FrdpSession *self)
   settings->ServerPort = priv->port;
   settings->Username = g_strdup (priv->username);
   settings->Password = g_strdup (priv->password);
+  settings->Domain = g_strdup (priv->domain);
 
   settings->AllowFontSmoothing = TRUE;
   settings->AllowUnanouncedOrdersFromServer = TRUE;
@@ -877,6 +880,9 @@ frdp_session_get_property (GObject    *object,
       case PROP_PASSWORD:
         g_value_set_string (value, settings->Password);
         break;
+      case PROP_DOMAIN:
+        g_value_set_string (value, settings->Domain);
+        break;
       case PROP_DISPLAY:
         g_value_set_object (value, self->priv->display);
         break;
@@ -917,6 +923,10 @@ frdp_session_set_property (GObject      *object,
         g_free (self->priv->password);
         self->priv->password = g_value_dup_string (value);
         break;
+      case PROP_DOMAIN:
+        g_free (self->priv->domain);
+        self->priv->domain = g_value_dup_string (value);
+        break;
       case PROP_DISPLAY:
         self->priv->display = g_value_get_object (value);
         break;
@@ -984,6 +994,14 @@ frdp_session_class_init (FrdpSessionClass *klass)
                                                         NULL,
                                                         G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE));
 
+  g_object_class_install_property (gobject_class,
+                                   PROP_DOMAIN,
+                                   g_param_spec_string ("domain",
+                                                        "domain",
+                                                        "domain",
+                                                        NULL,
+                                                        G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE));
+
   g_object_class_install_property (gobject_class,
                                    PROP_DISPLAY,
                                    g_param_spec_object ("display",
-- 
2.47.1

